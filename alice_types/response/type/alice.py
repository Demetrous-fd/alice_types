from typing import Optional, Union

from pydantic import BaseModel, Field, field_validator

from alice_types.response import Analytics
from alice_types.mixin import ExcludeUnsetMixin
from alice_types.validators import validate_dict_size, DynamicSize
from alice_types.response.type import ShowResponse, Response


class AliceResponse(BaseModel, ExcludeUnsetMixin, validate_assignment=True):
    """
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 131072 –±–∞–π—Ç / 128 –ö–∏–±–∏–ë–∞–π—Ç

    –ü—Ä–∏–º–µ—Ä 1:
    ```python
    reply = AliceResponse(
        response=Response(
            text="–ü—Ä–∏–≤–µ—Ç üñê"
        ),
        session_state={
            "current_state": "START"
        }
    )
    ```

    –ü—Ä–∏–º–µ—Ä 2:
    ```python
    reply = AliceResponse()
    reply.response.text = "–ü—Ä–∏–≤–µ—Ç üñê"
    reply.session_state = {
        "current_state": "START"
    }
    ```
    """
    response: Union[ShowResponse, Response] = Field(
        default_factory=Response,
        description="–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."
    )
    session_state: Optional[dict] = Field(
        default=None,
        json_schema_extra={"exclude_unset": True},
        description="""
–û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–µ—Å—Å–∏–∏.
–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è, –µ—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞–≤—ã–∫–∞ –Ω–µ –≤–µ—Ä–Ω—É—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ session_state. 
–ï—Å–ª–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, –Ω–æ –µ–≥–æ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å, –Ω–∞–≤—ã–∫—É —Å–ª–µ–¥—É–µ—Ç –≤–µ—Ä–Ω—É—Ç—å —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç session_state, —á—Ç–æ –ø—Ä–∏—à–µ–ª –≤ –∑–∞–ø—Ä–æ—Å–µ.
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è SessionState: 130930 –±–∞–π—Ç (PC; mini 2.)
"""
    )
    user_state_update: Optional[dict] = Field(
        default=None,
        json_schema_extra={"exclude_unset": True},
        description="""
–û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø–æ–ª–µ, –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–≤—ã–∫ –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –ø–æ–ª–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º None (null).
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è UserState: 130930 –±–∞–π—Ç * 10 (PC; mini 2.), –Ω–æ —ç—Ç–æ –Ω–µ –ø—Ä–µ–¥–µ–ª, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –∏–∑-–∑–∞ –ë–µ—Ç—ã –ê–ª–∏—Å—ã.
"""
    )
    application_state: Optional[dict] = Field(
        default=None,
        json_schema_extra={"exclude_unset": True},
        description="""
–û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
–ß—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –Ω–∞–≤—ã–∫ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –ø–æ–ª–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º {} ‚Äî –ø—É—Å—Ç—ã–º —Å–ª–æ–≤–∞—Ä–µ–º.
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è ApplicationState: 130930 –±–∞–π—Ç (PC; mini 2.)
"""
    )
    analytics: Optional[Analytics] = Field(
        default=None,
        json_schema_extra={"exclude_unset": True},
        description="–û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏. –î–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–≤—ã–∫–∞–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AppMetrica. "
    )
    version: str = Field(
        default="1.0",
        description="–í–µ—Ä—Å–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞."
    )

    validate_session_state_size = field_validator("session_state", mode="before")(
        validate_dict_size(max_size=DynamicSize("session_state", 1024))
    )

    validate_user_state_size = field_validator("user_state_update", mode="before")(
        validate_dict_size(max_size=DynamicSize("user_state_update", 1024))
    )

    validate_application_state_size = field_validator("application_state", mode="before")(
        validate_dict_size(max_size=DynamicSize("application_state", 1024))
    )

    @classmethod
    def set_session_state_limit_size(cls, max_size: int = 1024):
        DynamicSize("session_state", max_size)

    @classmethod
    def set_user_state_limit_size(cls, max_size: int = 1024):
        DynamicSize("user_state_update", max_size)

    @classmethod
    def set_application_state_limit_size(cls, max_size: int = 1024):
        DynamicSize("application_state", max_size)
